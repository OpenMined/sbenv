name: CI

on:
  pull_request:
    branches: [ main, develop ]
  # Optionally, allow manual trigger for debugging
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: cli/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('cli/Cargo.lock') }}

      - name: Check formatting
        if: matrix.os != 'windows-latest'
        run: cd cli && cargo fmt -- --check

      - name: Run clippy
        if: matrix.os != 'windows-latest'
        run: cd cli && cargo clippy -- -D warnings

      - name: Run tests
        run: cd cli && cargo test --verbose

      - name: Build
        run: cd cli && cargo build --verbose